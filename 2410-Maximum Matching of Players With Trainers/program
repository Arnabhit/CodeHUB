//Time : O(Nlogn)
//Space : O(1)

class Solution {
    
    int lowerBound(int[] arr,int target,int low,int high){
        int mid = low+(high-low)/2;
        int ans = -1;
        
        while(low<=high){
        
            if(arr[mid]<target){
                low = mid+1;
            }
            
            else if(arr[mid]>=target){
                ans = mid;
                high = mid-1;
            }
            mid = low+(high-low)/2;
        }
        return ans;
    }
    
    
    public int matchPlayersAndTrainers(int[] players, int[] trainers) {
        Arrays.sort(trainers);
        Arrays.sort(players);
        int count = 0;
        int index = -1;
        
        
        System.out.println(lowerBound(trainers,1,0,trainers.length-1));
        
        for(int i=0;i<players.length;i++){
            index = lowerBound(trainers,players[i],index+1,trainers.length-1);
            
            if(index != -1){
                count+=1;
            }
            else
                break;
            
        }
        
                        
        return count;
    }
}
