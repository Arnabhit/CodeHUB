class Solution {
public:
    bool f(int i,int j, string &s, string &p, vector<vector<int>> &dp){
        if(i==0 && j==0) return 1;
        if(i==0 && j>0) return 0;
        if(j==0 && i>0){
            for(int ii=1;ii<=i;ii++){
                if(s[ii-1]!='*') return 0;
            }
            return 1;
        }
        if(dp[i][j]!=-1) return dp[i][j];
        if(s[i-1]==p[j-1] || s[i-1]=='?') return dp[i][j] = f(i-1,j-1,s,p,dp);
        if(s[i-1]=='*'){
            return dp[i][j] = f(i-1,j,s,p,dp) | f(i,j-1,s,p,dp);
        }
        return dp[i][j] = 0;
    }
    bool isMatch(string text, string pattern) {
        int n = pattern.length();
        int m = text.length();
        vector<bool> prev(m+1,0), cur(m+1,0);
        prev[0] = 1;
        for(int j=1;j<=m;j++) prev[j] = 0;
        for(int i=1;i<=n;i++){
            bool flag = 1;
            for(int ii=1;ii<=i;ii++){
                if(pattern[ii-1]!='*'){ flag = 0; break;}
            }
            cur[0] = flag;
            for(int j=1;j<=m;j++){
                if(pattern[i-1]==text[j-1] || pattern[i-1]=='?')  cur[j] = prev[j-1];
                else if(pattern[i-1]=='*'){
                     cur[j] = prev[j] | cur[j-1];
                }
                else cur[j] = 0;
            }
            prev = cur;
        }
        return prev[m];
    }
};
